name: CI/CD Pipeline

on: [push, pull_request]


jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PG_DATABASE_HOSTNAME: ${{ env.PG_DATABASE_HOSTNAME }}
      PG_DATABASE_PORT: ${{ env.PG_DATABASE_PORT }}
      PG_DATABASE_PASSWORD: ${{ env.PG_DATABASE_PASSWORD }}
      PG_DATABASE_NAME: ${{ env.PG_DATABASE_NAME }}
      PG_DATABASE_USERNAME: ${{ env.PG_DATABASE_USERNAME }}

      JWT_SECRET_KEY: ${{ env.JWT_SECRET_KEY }}
      JWT_ALGORITHM: ${{ env.JWT_ALGORITHM }}
      JWT_TOKEN_EXPIRE_MINUTES: ${{ env.JWT_TOKEN_EXPIRE_MINUTES }}

      MONGO_USERNAME: ${{ env.MONGO_USERNAME }}
      MONGO_PASSWORD: ${{ env.MONGO_PASSWORD }}
      MONGO_CLUSTER_NAME: ${{ env.MONGO_CLUSTER_NAME }}
      MONGO_CHAT_DATABASE_NAME: ${{ env.MONGO_CHAT_DATABASE_NAME }}
      MONGO_MESSAGES_COLLECTION_NAME: ${{ env.MONGO_MESSAGES_COLLECTION_NAME }}

      S3_ACCESS_KEY: ${{ env.S3_ACCESS_KEY }}
      S3_SECRET_ACCESS_KEY: ${{ env.S3_SECRET_ACCESS_KEY }}
      S3_PROFILE_IMAGE_BUCKET: ${{ env.S3_PROFILE_IMAGE_BUCKET }}
      DEFAULT_PROFILE_IMAGE: ${{ env.DEFAULT_PROFILE_IMAGE }}

      SPOTIFY_CLIENT_ID: ${{ env.SPOTIFY_CLIENT_ID }}
      SPOTIFY_CLIENT_SECRET: ${{ env.SPOTIFY_CLIENT_SECRET }}
      SPOTIFY_SCOPES: ${{ env.SPOTIFY_SCOPES }}
      SPOTIFY_REDIRECT_URI: ${{ env.SPOTIFY_REDIRECT_URI }}

      EMAIL_HOST: ${{ env.EMAIL_HOST }}
      EMAIL_PORT: ${{ env.EMAIL_PORT }}
      EMAIL_USERNAME: ${{ env.EMAIL_USERNAME }}
      EMAIL_PASSWORD: ${{ env.EMAIL_PASSWORD }}
      EMAIL_FROM: ${{ env.EMAIL_FROM }}

      REDIS_HOST: ${{ env.REDIS_HOST }}
      REDIS_PORT: ${{ env.REDIS_PORT }}
      REDIS_CELERY_BROKER_DB: ${{ env.REDIS_CELERY_BROKER_DB }}
      REDIS_CELERY_BACKEND_DB: ${{ env.REDIS_CELERY_BACKEND_DB }}
      REDIS_LOCATION_CHANNEL: ${{ env.REDIS_LOCATION_CHANNEL }}
      COMPOSE_INTERACTIVE_NO_CLI: 1

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Build Docker Compose
      run: docker-compose -f docker-compose-autotest.yml build

    - name: Run Docker Compose And Tests
      run: |
        docker-compose -f docker-compose-autotest.yml run pytest
        docker-compose -f docker-compose-autotest.yml down

