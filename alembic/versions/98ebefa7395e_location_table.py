"""location table

Revision ID: 98ebefa7395e
Revises: 19fdfc9ed76b
Create Date: 2024-01-09 02:42:06.548381

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '98ebefa7395e'
down_revision: Union[str, None] = '19fdfc9ed76b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('location',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('latitude', sa.Double(), nullable=False),
    sa.Column('longitude', sa.Double(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )

    op.execute(
        """
        CREATE TRIGGER trigger_update_updated_at
        BEFORE UPDATE ON location
        FOR EACH ROW EXECUTE FUNCTION update_updated_at();
        """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TRIGGER IF EXISTS trigger_update_updated_at ON location;")
    op.drop_table('location')
    # ### end Alembic commands ###
